<h2>DAG</h2>
<div id="sos-graph"></div>
<br>
<h2>Manifest</h2>
<div class="row">
    <div class="col-6">
        <button id="verifySignature" type="button" class="btn btn-primary">Verify Signature</button>
    </div>
    <div class="col-6">
        <select name="userGUID" id="roleForSignatureVerification">
            #foreach($role in $roles)
                <option value=$role.guid().toMultiHash()>$role.getName() - $role.guid().toShortString()</option>
            #end
        </select>
    </div>
    <br>
    <p>Signature verification result: <strong><span id="signatureResult"></span></strong></p>
</div>
<pre style="white-space: pre-wrap; word-wrap: break-word;"><code id="manifest" class="json"></code></pre>
<br>
<h2>Data</h2>
<div class="row">
    <div class="col-6">
        <button id="verifyIntegrity" type="button" class="btn btn-primary">Verify Integrity</button>
        <button id="showProtectedData" type="button" class="btn btn-primary">Show data (if protected)</button>
    </div>
    <div class="col-6">
        <select name="userGUID" id="roleForProtectedData">
            #foreach($role in $roles)
                <option value=$role.guid().toMultiHash()>$role.getName() - $role.guid().toShortString()</option>
            #end
        </select>
    </div>
    <br>
    <p>Date integrity result: <strong><span id="integrityResult"></span></strong></p>
</div>
<div id="data"></div>
<br>
<h2>Metadata</h2>
<pre style="white-space: pre-wrap; word-wrap: break-word;"><code id="metadata" class="json"></code></pre>
<br>
<h2>Data Stored</h2>
here list of other nodes where this entity is stored

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.20.1/vis.min.js"></script>
<script src="js/sos.js"></script>
<script type="text/javascript">


    function showVersionInfo() {
        id = $(this).val();
        console.log(id);

        // UPDATE THE DAG
        evaluateGraph(id);

        $.get("/manifest/" + id , function(data) {
            $('#manifest').html(data);
            hljs.highlightBlock($('#manifest')[0]);
        })

        $.get("/metadata/" + id , function(data) {
            $('#metadata').html(data);
            hljs.highlightBlock($('#metadata')[0]);
        })

        $.get("/data/" + id , function(data) {
            $('#data').html(data);
        })

    };

    $('button[id^="more"').click(showVersionInfo);

    $("#verifySignature").click(function() {

        var manifestJSON = $("#manifest").text();
        var obj = JSON.parse(manifestJSON);
        var roleid = $("#roleForSignatureVerification option:selected").val();

        $.get("verifySignature/" + obj.GUID + "/role/" + roleid, function (data) {
            $("#signatureResult").html(data);
        });
    });

    $("#verifyIntegrity").click(function() {

        var manifestJSON = $("#manifest").text();
        var obj = JSON.parse(manifestJSON);

        $.get("verifyIntegrity/" + obj.GUID, function (data) {
            $("#integrityResult").html(data);
        });
    });

    $("#showProtectedData").click(function() {

        var manifestJSON = $("#manifest").text();
        var obj = JSON.parse(manifestJSON);
        var roleid = $("#roleForProtectedData option:selected").val();

        $.get("/data/" + obj.GUID + "/role/" + roleid, function (data) {
            $("#data").html(data);
        });
    });
</script>
